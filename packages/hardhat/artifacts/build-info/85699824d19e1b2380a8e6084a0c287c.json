{"id":"85699824d19e1b2380a8e6084a0c287c","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/SimpleOracle.sol":{"content":"pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SimpleOracle is Ownable {\r\n  // create enum struct\r\n  enum Status {\r\n    Buy,\r\n    Sell\r\n  }\r\n\r\n  // current status variable\r\n  Status public currentStatus;\r\n  uint256 public lastUpdated;\r\n\r\n  // create event\r\n  event StatusChange(Status indexed status, uint256 timestamp);\r\n\r\n  // constructor to set initial status\r\n  constructor(Status initialStatus) {\r\n    currentStatus = initialStatus;\r\n  }\r\n\r\n  // create function to change status\r\n  function changeStatus(Status status) external onlyOwner {\r\n    currentStatus = status;\r\n    lastUpdated = block.timestamp;\r\n    emit StatusChange(status, lastUpdated);\r\n  }\r\n\r\n  // create function to get status\r\n  function getStatus() external view returns (Status) {\r\n    return currentStatus;\r\n  }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SimpleOracle.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/SimpleOracle.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[134],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":135,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,134],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"111:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"Context","nameLocation":"626:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"702:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:1","memberName":"sender","nodeType":"MemberAccess","src":"719:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"712:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"659:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"693:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:1"},"scope":134,"src":"640:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"809:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:1","memberName":"data","nodeType":"MemberAccess","src":"826:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"819:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"759:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"793:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:1"},"scope":134,"src":"742:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":135,"src":"608:235:1","usedErrors":[]}],"src":"86:758:1"},"id":1},"contracts/SimpleOracle.sol":{"ast":{"absolutePath":"contracts/SimpleOracle.sol","exportedSymbols":{"Context":[134],"Ownable":[112],"SimpleOracle":[198]},"id":199,"nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":199,"sourceUnit":113,"src":"27:52:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":138,"name":"Ownable","nameLocations":["108:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"108:7:2"},"id":139,"nodeType":"InheritanceSpecifier","src":"108:7:2"}],"canonicalName":"SimpleOracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":198,"linearizedBaseContracts":[198,112,134],"name":"SimpleOracle","nameLocation":"92:12:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SimpleOracle.Status","id":142,"members":[{"id":140,"name":"Buy","nameLocation":"165:3:2","nodeType":"EnumValue","src":"165:3:2"},{"id":141,"name":"Sell","nameLocation":"175:4:2","nodeType":"EnumValue","src":"175:4:2"}],"name":"Status","nameLocation":"151:6:2","nodeType":"EnumDefinition","src":"146:38:2"},{"constant":false,"functionSelector":"ef8a9235","id":145,"mutability":"mutable","name":"currentStatus","nameLocation":"234:13:2","nodeType":"VariableDeclaration","scope":198,"src":"220:27:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},"typeName":{"id":144,"nodeType":"UserDefinedTypeName","pathNode":{"id":143,"name":"Status","nameLocations":["220:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"220:6:2"},"referencedDeclaration":142,"src":"220:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"visibility":"public"},{"constant":false,"functionSelector":"d0b06f5d","id":147,"mutability":"mutable","name":"lastUpdated","nameLocation":"267:11:2","nodeType":"VariableDeclaration","scope":198,"src":"252:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"532fa750fce4e40042c5a70a70aa53f7dcdb7d64a1bcfab7d47440e10a6bcc05","id":154,"name":"StatusChange","nameLocation":"310:12:2","nodeType":"EventDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"indexed":true,"mutability":"mutable","name":"status","nameLocation":"338:6:2","nodeType":"VariableDeclaration","scope":154,"src":"323:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},"typeName":{"id":149,"nodeType":"UserDefinedTypeName","pathNode":{"id":148,"name":"Status","nameLocations":["323:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"323:6:2"},"referencedDeclaration":142,"src":"323:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"visibility":"internal"},{"constant":false,"id":152,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"354:9:2","nodeType":"VariableDeclaration","scope":154,"src":"346:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"322:42:2"},"src":"304:61:2"},{"body":{"id":164,"nodeType":"Block","src":"445:42:2","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"currentStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"452:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"initialStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"468:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"src":"452:29:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"id":163,"nodeType":"ExpressionStatement","src":"452:29:2"}]},"id":165,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"initialStatus","nameLocation":"430:13:2","nodeType":"VariableDeclaration","scope":165,"src":"423:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"Status","nameLocations":["423:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"423:6:2"},"referencedDeclaration":142,"src":"423:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"visibility":"internal"}],"src":"422:22:2"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"445:0:2"},"scope":198,"src":"411:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":187,"nodeType":"Block","src":"588:116:2","statements":[{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":173,"name":"currentStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"595:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":174,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"611:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"src":"595:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"id":176,"nodeType":"ExpressionStatement","src":"595:22:2"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"lastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"624:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":178,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"638:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"644:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"638:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"624:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":181,"nodeType":"ExpressionStatement","src":"624:29:2"},{"eventCall":{"arguments":[{"id":183,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"678:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},{"id":184,"name":"lastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"686:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":182,"name":"StatusChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"665:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Status_$142_$_t_uint256_$returns$__$","typeString":"function (enum SimpleOracle.Status,uint256)"}},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"665:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":186,"nodeType":"EmitStatement","src":"660:38:2"}]},"functionSelector":"95bc9538","id":188,"implemented":true,"kind":"function","modifiers":[{"id":171,"kind":"modifierInvocation","modifierName":{"id":170,"name":"onlyOwner","nameLocations":["578:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"578:9:2"},"nodeType":"ModifierInvocation","src":"578:9:2"}],"name":"changeStatus","nameLocation":"541:12:2","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"status","nameLocation":"561:6:2","nodeType":"VariableDeclaration","scope":188,"src":"554:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},"typeName":{"id":167,"nodeType":"UserDefinedTypeName","pathNode":{"id":166,"name":"Status","nameLocations":["554:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"554:6:2"},"referencedDeclaration":142,"src":"554:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"visibility":"internal"}],"src":"553:15:2"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"588:0:2"},"scope":198,"src":"532:172:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":196,"nodeType":"Block","src":"798:33:2","statements":[{"expression":{"id":194,"name":"currentStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"812:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"805:20:2"}]},"functionSelector":"4e69d560","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"getStatus","nameLocation":"755:9:2","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"764:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"790:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"},"typeName":{"id":191,"nodeType":"UserDefinedTypeName","pathNode":{"id":190,"name":"Status","nameLocations":["790:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"790:6:2"},"referencedDeclaration":142,"src":"790:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$142","typeString":"enum SimpleOracle.Status"}},"visibility":"internal"}],"src":"789:8:2"},"scope":198,"src":"746:85:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":199,"src":"83:751:2","usedErrors":[]}],"src":"0:836:2"},"id":2}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleOracle.sol":{"SimpleOracle":{"abi":[{"inputs":[{"internalType":"enum SimpleOracle.Status","name":"initialStatus","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum SimpleOracle.Status","name":"status","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"StatusChange","type":"event"},{"inputs":[{"internalType":"enum SimpleOracle.Status","name":"status","type":"uint8"}],"name":"changeStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentStatus","outputs":[{"internalType":"enum SimpleOracle.Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStatus","outputs":[{"internalType":"enum SimpleOracle.Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastUpdated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_165":{"entryPoint":null,"id":165,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":null,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":104,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_enum$_Status_$142_fromMemory":{"entryPoint":184,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":224,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:418:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"105:179:3","statements":[{"body":{"nodeType":"YulBlock","src":"151:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"153:6:3"},"nodeType":"YulFunctionCall","src":"153:12:3"},"nodeType":"YulExpressionStatement","src":"153:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"126:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"135:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"122:3:3"},"nodeType":"YulFunctionCall","src":"122:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"147:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"118:3:3"},"nodeType":"YulFunctionCall","src":"118:32:3"},"nodeType":"YulIf","src":"115:52:3"},{"nodeType":"YulVariableDeclaration","src":"176:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:3"},"nodeType":"YulFunctionCall","src":"189:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"238:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"247:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"250:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"240:6:3"},"nodeType":"YulFunctionCall","src":"240:12:3"},"nodeType":"YulExpressionStatement","src":"240:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"234:1:3","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"224:2:3"},"nodeType":"YulFunctionCall","src":"224:12:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:3"},"nodeType":"YulFunctionCall","src":"217:20:3"},"nodeType":"YulIf","src":"214:40:3"},{"nodeType":"YulAssignment","src":"263:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"273:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"263:6:3"}]}]},"name":"abi_decode_tuple_t_enum$_Status_$142_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"71:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"82:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"94:6:3","type":""}],"src":"14:270:3"},{"body":{"nodeType":"YulBlock","src":"321:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"338:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"350:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"341:3:3"},"nodeType":"YulFunctionCall","src":"341:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"331:6:3"},"nodeType":"YulFunctionCall","src":"331:31:3"},"nodeType":"YulExpressionStatement","src":"331:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"381:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:3"},"nodeType":"YulFunctionCall","src":"371:15:3"},"nodeType":"YulExpressionStatement","src":"371:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"402:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"405:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"395:6:3"},"nodeType":"YulFunctionCall","src":"395:15:3"},"nodeType":"YulExpressionStatement","src":"395:15:3"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"289:127:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_enum$_Status_$142_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516104a93803806104a983398101604081905261002f916100b8565b61003833610068565b6000805482919060ff60a01b1916600160a01b83600181111561005d5761005d6100e0565b0217905550506100f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ca57600080fd5b8151600281106100d957600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b6103a4806101056000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806395bc95381161005b57806395bc9538146100cb578063d0b06f5d146100de578063ef8a9235146100f5578063f2fde38b1461010957600080fd5b80634e69d56014610082578063715018a6146100a65780638da5cb5b146100b0575b600080fd5b600054600160a01b900460ff165b60405161009d91906102f5565b60405180910390f35b6100ae61011c565b005b6000546040516001600160a01b03909116815260200161009d565b6100ae6100d936600461031d565b610130565b6100e760015481565b60405190815260200161009d565b60005461009090600160a01b900460ff1681565b6100ae610117366004610345565b6101b7565b610124610235565b61012e600061028f565b565b610138610235565b6000805482919060ff60a01b1916600160a01b83600181111561015d5761015d6102df565b02179055504260019081558190811115610179576101796102df565b7f532fa750fce4e40042c5a70a70aa53f7dcdb7d64a1bcfab7d47440e10a6bcc056001546040516101ac91815260200190565b60405180910390a250565b6101bf610235565b6001600160a01b0381166102295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102328161028f565b50565b6000546001600160a01b0316331461012e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610220565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061031757634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561032f57600080fd5b81356002811061033e57600080fd5b9392505050565b60006020828403121561035757600080fd5b81356001600160a01b038116811461033e57600080fdfea2646970667358221220214d900eed936f1c55ad7d0f50e5484b1d338f7dc2abd5ea9d33ee4ae8a502cf64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4A9 CODESIZE SUB DUP1 PUSH2 0x4A9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5D JUMPI PUSH2 0x5D PUSH2 0xE0 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 LT PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3A4 DUP1 PUSH2 0x105 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95BC9538 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95BC9538 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD0B06F5D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xEF8A9235 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E69D560 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH2 0xAE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH2 0xE7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x90 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x0 PUSH2 0x28F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x138 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15D JUMPI PUSH2 0x15D PUSH2 0x2DF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE DUP2 SWAP1 DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 PUSH2 0x2DF JUMP JUMPDEST PUSH32 0x532FA750FCE4E40042C5A70A70AA53F7DCDB7D64A1BCFAB7D47440E10A6BCC05 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x28F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x317 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4D SWAP1 0xE 0xED SWAP4 PUSH16 0x1C55AD7D0F50E5484B1D338F7DC2ABD5 0xEA SWAP14 CALLER 0xEE 0x4A 0xE8 0xA5 MUL 0xCF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"83:751:2:-:0;;;411:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;452:13:2;:29;;468:13;;452;-1:-1:-1;;;;452:29:2;-1:-1:-1;;;468:13:2;452:29;;;;;;;;:::i;:::-;;;;;;411:76;83:751;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:270:3:-;94:6;147:2;135:9;126:7;122:23;118:32;115:52;;;163:1;160;153:12;115:52;195:9;189:16;234:1;227:5;224:12;214:40;;250:1;247;240:12;214:40;273:5;14:270;-1:-1:-1;;;14:270:3:o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;289:127;83:751:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":565,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":null,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":655,"id":111,"parameterSlots":1,"returnSlots":0},"@changeStatus_188":{"entryPoint":304,"id":188,"parameterSlots":1,"returnSlots":0},"@currentStatus_145":{"entryPoint":null,"id":145,"parameterSlots":0,"returnSlots":0},"@getStatus_197":{"entryPoint":null,"id":197,"parameterSlots":0,"returnSlots":1},"@lastUpdated_147":{"entryPoint":null,"id":147,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":284,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":439,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_Status_$142":{"entryPoint":797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Status_$142__to_t_uint8__fromStack_reversed":{"entryPoint":757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":735,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2206:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:3"},"nodeType":"YulFunctionCall","src":"66:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:3"},"nodeType":"YulFunctionCall","src":"56:31:3"},"nodeType":"YulExpressionStatement","src":"56:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:3"},"nodeType":"YulFunctionCall","src":"96:15:3"},"nodeType":"YulExpressionStatement","src":"96:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:3"},"nodeType":"YulFunctionCall","src":"120:15:3"},"nodeType":"YulExpressionStatement","src":"120:15:3"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"14:127:3"},{"body":{"nodeType":"YulBlock","src":"255:229:3","statements":[{"nodeType":"YulAssignment","src":"265:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"277:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"288:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"273:3:3"},"nodeType":"YulFunctionCall","src":"273:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"265:4:3"}]},{"body":{"nodeType":"YulBlock","src":"333:111:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"354:1:3","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"361:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"366:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"357:3:3"},"nodeType":"YulFunctionCall","src":"357:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"347:6:3"},"nodeType":"YulFunctionCall","src":"347:31:3"},"nodeType":"YulExpressionStatement","src":"347:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"398:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"401:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"391:6:3"},"nodeType":"YulFunctionCall","src":"391:15:3"},"nodeType":"YulExpressionStatement","src":"391:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"426:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"429:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"419:6:3"},"nodeType":"YulFunctionCall","src":"419:15:3"},"nodeType":"YulExpressionStatement","src":"419:15:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"313:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:3","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"310:2:3"},"nodeType":"YulFunctionCall","src":"310:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"303:6:3"},"nodeType":"YulFunctionCall","src":"303:21:3"},"nodeType":"YulIf","src":"300:144:3"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"460:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"471:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"453:6:3"},"nodeType":"YulFunctionCall","src":"453:25:3"},"nodeType":"YulExpressionStatement","src":"453:25:3"}]},"name":"abi_encode_tuple_t_enum$_Status_$142__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"224:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"235:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"246:4:3","type":""}],"src":"146:338:3"},{"body":{"nodeType":"YulBlock","src":"590:102:3","statements":[{"nodeType":"YulAssignment","src":"600:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"612:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"623:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:3"},"nodeType":"YulFunctionCall","src":"608:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"600:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"642:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"657:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"673:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"678:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"669:3:3"},"nodeType":"YulFunctionCall","src":"669:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"682:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"665:3:3"},"nodeType":"YulFunctionCall","src":"665:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"653:3:3"},"nodeType":"YulFunctionCall","src":"653:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"635:6:3"},"nodeType":"YulFunctionCall","src":"635:51:3"},"nodeType":"YulExpressionStatement","src":"635:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"559:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"570:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"581:4:3","type":""}],"src":"489:203:3"},{"body":{"nodeType":"YulBlock","src":"777:186:3","statements":[{"body":{"nodeType":"YulBlock","src":"823:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:3"},"nodeType":"YulFunctionCall","src":"825:12:3"},"nodeType":"YulExpressionStatement","src":"825:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"798:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"807:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"794:3:3"},"nodeType":"YulFunctionCall","src":"794:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"819:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"790:3:3"},"nodeType":"YulFunctionCall","src":"790:32:3"},"nodeType":"YulIf","src":"787:52:3"},{"nodeType":"YulVariableDeclaration","src":"848:36:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"874:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"861:12:3"},"nodeType":"YulFunctionCall","src":"861:23:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"852:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"917:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"926:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"929:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"919:6:3"},"nodeType":"YulFunctionCall","src":"919:12:3"},"nodeType":"YulExpressionStatement","src":"919:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"913:1:3","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"903:2:3"},"nodeType":"YulFunctionCall","src":"903:12:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"896:6:3"},"nodeType":"YulFunctionCall","src":"896:20:3"},"nodeType":"YulIf","src":"893:40:3"},{"nodeType":"YulAssignment","src":"942:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"952:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"942:6:3"}]}]},"name":"abi_decode_tuple_t_enum$_Status_$142","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"743:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"754:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"766:6:3","type":""}],"src":"697:266:3"},{"body":{"nodeType":"YulBlock","src":"1069:76:3","statements":[{"nodeType":"YulAssignment","src":"1079:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1091:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1102:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1087:3:3"},"nodeType":"YulFunctionCall","src":"1087:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1079:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"1132:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1114:6:3"},"nodeType":"YulFunctionCall","src":"1114:25:3"},"nodeType":"YulExpressionStatement","src":"1114:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1038:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1049:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1060:4:3","type":""}],"src":"968:177:3"},{"body":{"nodeType":"YulBlock","src":"1220:216:3","statements":[{"body":{"nodeType":"YulBlock","src":"1266:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1275:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1278:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1268:6:3"},"nodeType":"YulFunctionCall","src":"1268:12:3"},"nodeType":"YulExpressionStatement","src":"1268:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1241:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1250:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1237:3:3"},"nodeType":"YulFunctionCall","src":"1237:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1262:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1233:3:3"},"nodeType":"YulFunctionCall","src":"1233:32:3"},"nodeType":"YulIf","src":"1230:52:3"},{"nodeType":"YulVariableDeclaration","src":"1291:36:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1317:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1304:12:3"},"nodeType":"YulFunctionCall","src":"1304:23:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1390:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1399:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1402:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1392:6:3"},"nodeType":"YulFunctionCall","src":"1392:12:3"},"nodeType":"YulExpressionStatement","src":"1392:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1349:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1360:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1375:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1380:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1371:3:3"},"nodeType":"YulFunctionCall","src":"1371:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"1384:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1367:3:3"},"nodeType":"YulFunctionCall","src":"1367:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1356:3:3"},"nodeType":"YulFunctionCall","src":"1356:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1346:2:3"},"nodeType":"YulFunctionCall","src":"1346:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1339:6:3"},"nodeType":"YulFunctionCall","src":"1339:50:3"},"nodeType":"YulIf","src":"1336:70:3"},{"nodeType":"YulAssignment","src":"1415:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1425:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:3"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1186:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1197:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1209:6:3","type":""}],"src":"1150:286:3"},{"body":{"nodeType":"YulBlock","src":"1615:228:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1643:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1625:6:3"},"nodeType":"YulFunctionCall","src":"1625:21:3"},"nodeType":"YulExpressionStatement","src":"1625:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1666:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1677:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1662:3:3"},"nodeType":"YulFunctionCall","src":"1662:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"1682:2:3","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1655:6:3"},"nodeType":"YulFunctionCall","src":"1655:30:3"},"nodeType":"YulExpressionStatement","src":"1655:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1705:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1716:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1701:3:3"},"nodeType":"YulFunctionCall","src":"1701:18:3"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1721:34:3","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1694:6:3"},"nodeType":"YulFunctionCall","src":"1694:62:3"},"nodeType":"YulExpressionStatement","src":"1694:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1776:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1787:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:3"},"nodeType":"YulFunctionCall","src":"1772:18:3"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1792:8:3","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:3"},"nodeType":"YulFunctionCall","src":"1765:36:3"},"nodeType":"YulExpressionStatement","src":"1765:36:3"},{"nodeType":"YulAssignment","src":"1810:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1833:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:3"},"nodeType":"YulFunctionCall","src":"1818:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1810:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1592:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1606:4:3","type":""}],"src":"1441:402:3"},{"body":{"nodeType":"YulBlock","src":"2022:182:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2039:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2050:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:3"},"nodeType":"YulFunctionCall","src":"2032:21:3"},"nodeType":"YulExpressionStatement","src":"2032:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2073:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2084:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:3"},"nodeType":"YulFunctionCall","src":"2069:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"2089:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:3"},"nodeType":"YulFunctionCall","src":"2062:30:3"},"nodeType":"YulExpressionStatement","src":"2062:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2112:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2123:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2108:3:3"},"nodeType":"YulFunctionCall","src":"2108:18:3"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2128:34:3","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2101:6:3"},"nodeType":"YulFunctionCall","src":"2101:62:3"},"nodeType":"YulExpressionStatement","src":"2101:62:3"},{"nodeType":"YulAssignment","src":"2172:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2195:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:3"},"nodeType":"YulFunctionCall","src":"2180:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2172:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1999:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2013:4:3","type":""}],"src":"1848:356:3"}]},"contents":"{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$142__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_enum$_Status_$142(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c806395bc95381161005b57806395bc9538146100cb578063d0b06f5d146100de578063ef8a9235146100f5578063f2fde38b1461010957600080fd5b80634e69d56014610082578063715018a6146100a65780638da5cb5b146100b0575b600080fd5b600054600160a01b900460ff165b60405161009d91906102f5565b60405180910390f35b6100ae61011c565b005b6000546040516001600160a01b03909116815260200161009d565b6100ae6100d936600461031d565b610130565b6100e760015481565b60405190815260200161009d565b60005461009090600160a01b900460ff1681565b6100ae610117366004610345565b6101b7565b610124610235565b61012e600061028f565b565b610138610235565b6000805482919060ff60a01b1916600160a01b83600181111561015d5761015d6102df565b02179055504260019081558190811115610179576101796102df565b7f532fa750fce4e40042c5a70a70aa53f7dcdb7d64a1bcfab7d47440e10a6bcc056001546040516101ac91815260200190565b60405180910390a250565b6101bf610235565b6001600160a01b0381166102295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102328161028f565b50565b6000546001600160a01b0316331461012e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610220565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061031757634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561032f57600080fd5b81356002811061033e57600080fd5b9392505050565b60006020828403121561035757600080fd5b81356001600160a01b038116811461033e57600080fdfea2646970667358221220214d900eed936f1c55ad7d0f50e5484b1d338f7dc2abd5ea9d33ee4ae8a502cf64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95BC9538 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95BC9538 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD0B06F5D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xEF8A9235 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E69D560 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH2 0xAE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x130 JUMP JUMPDEST PUSH2 0xE7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x90 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x0 PUSH2 0x28F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x138 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15D JUMPI PUSH2 0x15D PUSH2 0x2DF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE DUP2 SWAP1 DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 PUSH2 0x2DF JUMP JUMPDEST PUSH32 0x532FA750FCE4E40042C5A70A70AA53F7DCDB7D64A1BCFAB7D47440E10A6BCC05 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x28F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x317 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4D SWAP1 0xE 0xED SWAP4 PUSH16 0x1C55AD7D0F50E5484B1D338F7DC2ABD5 0xEA SWAP14 CALLER 0xEE 0x4A 0xE8 0xA5 MUL 0xCF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"83:751:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:85;790:6;812:13;-1:-1:-1;;;812:13:2;;;;746:85;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;635:51:3;;623:2;608:18;1201:85:0;489:203:3;532:172:2;;;;;;:::i;:::-;;:::i;252:26::-;;;;;;;;;1114:25:3;;;1102:2;1087:18;252:26:2;968:177:3;220:27:2;;;;;-1:-1:-1;;;220:27:2;;;;;;2074:198:0;;;;;;:::i;:::-;;:::i;1824:101::-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;532:172:2:-;1094:13:0;:11;:13::i;:::-;595::2::1;:22:::0;;611:6;;595:13;-1:-1:-1;;;;595:22:2::1;-1:-1:-1::0;;;611:6:2;595:22:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;638:15:2::1;624:11;:29:::0;;;678:6;;665:33;::::1;;;;;;:::i;:::-;;686:11;;665:33;;;;1114:25:3::0;;1102:2;1087:18;;968:177;665:33:2::1;;;;;;;;532:172:::0;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;1643:2:3;2154:73:0::1;::::0;::::1;1625:21:3::0;1682:2;1662:18;;;1655:30;1721:34;1701:18;;;1694:62;-1:-1:-1;;;1772:18:3;;;1765:36;1818:19;;2154:73:0::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2050:2:3;1414:68:0;;;2032:21:3;;;2069:18;;;2062:30;2128:34;2108:18;;;2101:62;2180:18;;1414:68:0;1848:356:3;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:127:3:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:338;288:2;273:18;;321:1;310:13;;300:144;;366:10;361:3;357:20;354:1;347:31;401:4;398:1;391:15;429:4;426:1;419:15;300:144;453:25;;;146:338;:::o;697:266::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;874:9;861:23;913:1;906:5;903:12;893:40;;929:1;926;919:12;893:40;952:5;697:266;-1:-1:-1;;;697:266:3:o;1150:286::-;1209:6;1262:2;1250:9;1241:7;1237:23;1233:32;1230:52;;;1278:1;1275;1268:12;1230:52;1304:23;;-1:-1:-1;;;;;1356:31:3;;1346:42;;1336:70;;1402:1;1399;1392:12"},"gasEstimates":{"creation":{"codeDepositCost":"186400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeStatus(uint8)":"52383","currentStatus()":"2412","getStatus()":"2352","lastUpdated()":"2317","owner()":"2346","renounceOwnership()":"infinite","transferOwnership(address)":"28364"}},"methodIdentifiers":{"changeStatus(uint8)":"95bc9538","currentStatus()":"ef8a9235","getStatus()":"4e69d560","lastUpdated()":"d0b06f5d","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum SimpleOracle.Status\",\"name\":\"initialStatus\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum SimpleOracle.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"StatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum SimpleOracle.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"changeStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentStatus\",\"outputs\":[{\"internalType\":\"enum SimpleOracle.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum SimpleOracle.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleOracle.sol\":\"SimpleOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/SimpleOracle.sol\":{\"content\":\"pragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract SimpleOracle is Ownable {\\r\\n  // create enum struct\\r\\n  enum Status {\\r\\n    Buy,\\r\\n    Sell\\r\\n  }\\r\\n\\r\\n  // current status variable\\r\\n  Status public currentStatus;\\r\\n  uint256 public lastUpdated;\\r\\n\\r\\n  // create event\\r\\n  event StatusChange(Status indexed status, uint256 timestamp);\\r\\n\\r\\n  // constructor to set initial status\\r\\n  constructor(Status initialStatus) {\\r\\n    currentStatus = initialStatus;\\r\\n  }\\r\\n\\r\\n  // create function to change status\\r\\n  function changeStatus(Status status) external onlyOwner {\\r\\n    currentStatus = status;\\r\\n    lastUpdated = block.timestamp;\\r\\n    emit StatusChange(status, lastUpdated);\\r\\n  }\\r\\n\\r\\n  // create function to get status\\r\\n  function getStatus() external view returns (Status) {\\r\\n    return currentStatus;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xe5267e3b6c81dc72664ec3440d7194bfcce497ce5979781711d6bb9c5ef9fece\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/SimpleOracle.sol:SimpleOracle","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":145,"contract":"contracts/SimpleOracle.sol:SimpleOracle","label":"currentStatus","offset":20,"slot":"0","type":"t_enum(Status)142"},{"astId":147,"contract":"contracts/SimpleOracle.sol:SimpleOracle","label":"lastUpdated","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_enum(Status)142":{"encoding":"inplace","label":"enum SimpleOracle.Status","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}